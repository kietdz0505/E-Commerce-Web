import React, { useEffect, useState } from "react";
import { getMyPromotions } from "../services/promotionService"// API ƒë√£ vi·∫øt ·ªü tr√™n
import { useNavigate } from "react-router-dom";

const UserPromotionPage = () => {
  const [promotions, setPromotions] = useState([]);
  const [page, setPage] = useState(0);
  const [size] = useState(5); // c√≥ th·ªÉ l·∫•y t·ª´ backend config, ho·∫∑c cho ng∆∞·ªùi d√πng ch·ªçn
  const [totalPages, setTotalPages] = useState(0);

  const navigate = useNavigate();

  useEffect(() => {
    fetchPromotions(page, size);
  }, [page, size]);

  const fetchPromotions = async (page, size) => {
    try {
      const data = await getMyPromotions(page, size);
      setPromotions(data.content);
      setTotalPages(data.totalPages);
    } catch (error) {
      console.error("Error fetching promotions:", error);
    }
  };

  return (
    <div className="container mt-4">
      <h2>üéÅ Khuy·∫øn m√£i c·ªßa b·∫°n</h2>

      {promotions.length === 0 ? (
        <p>B·∫°n ch∆∞a c√≥ khuy·∫øn m√£i n√†o.</p>
      ) : (
        <table className="table table-striped">
          <thead>
            <tr>
              <th>M√£</th>
              <th>M√¥ t·∫£</th>
              <th>Gi·∫£m (%)</th>
              <th>Th·ªùi gian</th>
              <th>Tr·∫°ng th√°i</th>
            </tr>
          </thead>
          <tbody>
            {promotions.map((promo) => (
              <tr key={promo.promotionId}>
                <td>{promo.code}</td>
                <td>{promo.description}</td>
                <td>{promo.discountPercent}</td>
                <td>
                  {promo.validFrom} ‚Üí {promo.validTo}
                </td>
                <td>{promo.status}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}

      {/* Pagination */}
      <div className="d-flex justify-content-between align-items-center mt-3">
        <button
          className="btn btn-outline-primary"
          disabled={page === 0}
          onClick={() => setPage(page - 1)}
        >
          ‚¨Ö Trang tr∆∞·ªõc
        </button>
        <span>
          Trang {page + 1} / {totalPages}
        </span>
        <button
          className="btn btn-outline-primary"
          disabled={page + 1 >= totalPages}
          onClick={() => setPage(page + 1)}
        >
          Trang sau ‚û°
        </button>
      </div>

      <button
        className="btn btn-secondary mt-3"
        onClick={() => navigate("/")}
      >
        ‚¨Ö Quay l·∫°i
      </button>
    </div>
  );
};

export default UserPromotionPage;
